earlier(Result, Date1, Date2) :-
    date(Date1), date(Date2), is_before(Date2,Date1), Result = Date2.
earlier(Result, Date1, Date2) :-
    date(Date1), date(Date2), is_before(Date1,Date2), Result = Date1.
earlier(Result, Date1, Date2) :-
	date(Date1), date(Date2), Date1 = Date2, Result = Date1.

later(Result, Date1, Date2) :-
	date(Date1), date(Date2), is_before(Date2,Date1), Result = Date1.
later(Result, Date1, Date2) :-
	date(Date1), date(Date2), is_before(Date1,Date2), Result = Date2.
later(Result, Date1, Date2) :-
	date(Date1), date(Date2), Date1 = Date2, Result = Date1.

%ยง7703. Determination of marital status
% at least one of taxp/spouse is defined
s7703(Taxp,Spouse,Marriage,Taxy) :-
    not_same_person(Taxp,Spouse),
	s7703_a(Taxp,Spouse,Marriage,Taxy),
	not_s7703_b(Taxp,Spouse,Taxy).

%(a) General rule
s7703_a(Taxp,Spouse,Marriage,Taxy) :-
	s7703_a_1(Taxp,Spouse,Marriage,_,Taxy),
	not_s7703_a_2(Taxp,Spouse,Marriage,_,Taxy).

%(1) the determination of whether an individual is married shall be made as of the close of his taxable year; except that if his spouse dies during his taxable year such determination shall be made as of the time of such death; and
s7703_a_1(Taxp,Spouse,Marriage,S13,Taxy) :-
	% useful constants
	last_day_year(Taxy,Last_day_year),
	first_day_year(Taxy,First_day_year),
	Taxy1=Taxy+1,
	first_day_year(Taxy1,First_day_next_year),
	% main body
	marriage_(Marriage),
	agent_(Marriage,Taxp),
	agent_(Marriage,Spouse),
	not_same_person(Taxp,Spouse),
    s7703_a_1_start(Marriage,Start_marriage,First_day_year),
    is_before(Start_marriage,Last_day_year),
	s7703_a_1_death_spouse_if(Spouse,S13,First_day_year,Last_day_year,Start_marriage).

s7703_a_1_death_spouse_if(Spouse,S13,First_day_year,Last_day_year,Start_marriage):-
	s7703_a_1_death_spouse(Spouse,S13,First_day_year,Last_day_year),
	% such determination shall be made as of the time of such death
	is_before(Start_marriage,S13),
	% marriage was still ongoing at death
	marriage_(Marriage),not_end_(Marriage,_).
s7703_a_1_death_spouse_if(Spouse,S13,First_day_year,Last_day_year,Start_marriage):-
	s7703_a_1_death_spouse(Spouse,S13,First_day_year,Last_day_year),
	% such determination shall be made as of the time of such death
	is_before(Start_marriage,S13),
	% or ended with death
	end_(Marriage,End_time),
	is_before(S13,End_time).
s7703_a_1_death_spouse_if(Spouse,S13,First_day_year,Last_day_year,Start_marriage):-
	% otherwise, default behavior: check at end of year
	% determining the end date of a marriage:
	date(First_day_year),date(Last_day_year),date(S13),date(Start_marriage),
	not_s7703_a_1_death_spouse(Spouse,S13,First_day_year,Last_day_year),
	s7703_a_1_end_marriage(Marriage,Spouse,First_day_next_year).


s7703_a_1_death_spouse(Spouse,S13,First_day_year,Last_day_year):-
	% if spouse died during taxable year
	death_(Death_spouse),
	agent_(Death_spouse,Spouse),
	start_(Death_spouse,S13),
	is_before(First_day_year,S13),
	is_before(S13,Last_day_year).

s7703_a_1_end_marriage(Marriage,Spouse,First_day_next_year):-
	marriage_(Marriage),not_end_(Marriage,_),s7703_a_1_death(Spouse,First_day_next_year).
s7703_a_1_end_marriage(Marriage,Spouse,First_day_next_year):-
	% else take end date
	person(Spouse),
	end_(Marriage,End_time),is_before(First_day_next_year,End_time).

s7703_a_1_death(Spouse,First_day_next_year):-
	s7703_a_1_death_2(Spouse,Spouse_dies),
	% take death date as end time
	start_(Spouse_dies,End_time),
	is_before(First_day_next_year,End_time).
s7703_a_1_death(Spouse,First_day_next_year):-
	date(First_day_next_year),person(Spouse),death_(Spouse_dies),
	not_s7703_a_1_death_2(Spouse,Spouse_dies).

s7703_a_1_death_2(Spouse,Spouse_dies):-
	% if spouse died,
	death_(Spouse_dies),
	agent_(Spouse_dies,Spouse).

s7703_a_1_start(Marriage,Start_marriage,First_day_year):-
	date(First_day_year),marriage_(Marriage),
	not_start_(Marriage,_),
	Start_marriage = First_day_year.
s7703_a_1_start(Marriage,Start_marriage,First_day_year):-
	date(First_day_year),
	start_(Marriage,Start_marriage).

%(2) an individual legally separated from his spouse under a decree of divorce or of separate maintenance shall not be considered as married.
s7703_a_2(Taxp,Spouse,Marriage,S19,Taxy) :-
    marriage_(Marriage),
    agent_(Marriage,Taxp),
    agent_(Marriage,Spouse),
	not_same_person(Taxp,Spouse),
	legal_separation_(S19),
	patient_(S19,Marriage),
	s7703_a_2_agent(S19),
	start_(S19,Divorce_time),
	last_day_year(Taxy,Last_day_year),
	is_before(Divorce_time,Last_day_year).

s7703_a_2_agent(S19) :-
	agent_(S19,"decree of divorce").
s7703_a_2_agent(S19) :-
	agent_(S19,"decree of separate maintenance").


%(b) Certain married individuals living apart

%For purposes of those provisions of this title which refer to this subsection, if-
s7703_b(Taxp,Spouse,Taxy) :-
	s7703_b_1(Taxp,Household,_,Taxy), 
	s7703_b_2(Taxp,Household,_,Taxy),
	s7703_b_3(Taxp,Spouse,Household,Taxy).


%(1) an individual who is married (within the meaning of subsection (a)) and who files a separate return maintains as his home a household which constitutes for more than one-half of the taxable year the principal place of abode of a child with respect to whom such individual is entitled to a deduction for the taxable year under section 151,
s7703_b_1(Taxp,Household,Dependent,Taxy) :-
	first_day_year(Taxy,First_day_year),
	last_day_year(Taxy,Last_day_year),
	not_s7703_b_1_joint_return(Taxp,First_day_year,Last_day_year),
	residence_(Taxp_residence),
	agent_(Taxp_residence,Taxp),
	patient_(Taxp_residence,Household),
	residence_(Child_lives_at_home),
	agent_(Child_lives_at_home,Dependent),
	patient_(Child_lives_at_home,Household),
	start_(Child_lives_at_home,Start_time),
    later(Start,Start_time,First_day_year),
    s7703_b_1_end(Child_lives_at_home,End_time),
	earlier(End,End_time,Last_day_year),
	% now compute time stamp of end minus time stamp of beginning and compare with time stamps of 1/2 of the year 0.
	duration(Start,End,Years,Months,Days),
	more_than_half_a_year(Years,Months),
    s152_a_1(Dependent,Taxp,Taxy).

s7703_b_1_joint_return(Taxp,First_day_year,Last_day_year):-
	joint_return_(Joint_return),
	agent_(Joint_return,Taxp),
	start_(Joint_return,First_day_year),
	end_(Joint_return,Last_day_year).

s7703_b_1_end(Child_lives_at_home,End_time):-
	date(End_time),residence_(Child_lives_at_home),
	not_end_(Child_lives_at_home,_).
s7703_b_1_end(Child_lives_at_home,End_time):-
	end_(Child_lives_at_home,End_time).

%(2) such individual furnishes over one-half of the cost of maintaining such household during the taxable year, and
% s7703_b_2(Taxp,Household,Cost,Taxy) :-
% 	person(Taxp),year(Taxy),household(Household),
	% Payment_by_individual = #sum{Payment_amount : 
	% 		payment_(Payment),
	% 		residence_(Residence),
	% 		agent_(Payment,Taxp),
	% 		patient_(Residence,Household),
	% 		s7703_b_2_purpose(Payment,Residence,Household),
	% 		amount_(Payment,Payment_amount),
	% 		start_(Payment,Payment_time), % assuming it's a single day
	% 		date_split(Payment_time,Taxy_payment,M1,D1),
	% 		Taxy=Taxy_payment_int},
	% Cost = #sum{Payment_amount :
	% 		payment_(Payment),
	% 		residence_(Residence),
	% 		patient_(Residence,Household),
	% 		s7703_b_2_purpose(Payment,Residence,Household),
	% 		amount_(Payment,Payment_amount),
	% 		start_(Payment,Payment_time), % assuming it's a single day
	% 		date_split(Payment_time,Taxy_payment,M1,D1),
	% 		Taxy=Taxy_payment_int},
	Cost>0,
	Ratio = Payment_by_individual/Cost,
	Ratio>=5/10.

s7703_b_2_purpose(Payment,Residence,Household):-
	household(Household),purpose_(Payment,Residence).
s7703_b_2_purpose(Payment,Residence,Household):-
	residence_(Residence),purpose_(Payment,Household).

%(3) during the last 6 months of the taxable year, such individual's spouse is not a member of such household,
s7703_b_3_is_member_of_household(Spouse,Household,Day) :-
    residence_(Spouse_lives_in_household),
    agent_(Spouse_lives_in_household,Spouse),
	patient_(Spouse_lives_in_household,Household),
    start_(Spouse_lives_in_household,Time_start),
    is_before(Time_start,Day),
	not_end_(Spouse_lives_in_household,_).
s7703_b_3_is_member_of_household(Spouse,Household,Day) :-
    residence_(Spouse_lives_in_household),
    agent_(Spouse_lives_in_household,Spouse),
	patient_(Spouse_lives_in_household,Household),
    start_(Spouse_lives_in_household,Time_start),
    is_before(Time_start,Day),
	end_(Spouse_lives_in_household,Time_end),
	is_before(Day,Time_end).

    
% s7703_b_3(Taxp,Spouse,Household,Taxy) :-
% 	household(Household),
%     s7703_a(Taxp,Spouse,_,Taxy),
    % Num_days = #count{Day :
	% 		date_split(Day,Y,M,D),
	% 		M>6,
    %         s7703_b_3_is_member_of_household(Spouse,Household,Day)},
    % Num_days=0.

%such individual shall not be considered as married.

assumption(not_start_(Event,Time)).
assumption(not_end_(Event,Time)).
assumption(not_nonresident_alien_cant_file_jointly(Taxp,Spouse,First_day,Last_day)).
assumption(not_single_return_joint_with_spouse(Joint_return, Taxp, Spouse, Taxy, First_day, Last_day)).
assumption(not_s2_a(Taxp,Spouse,Taxy)).
assumption(not_s2_b(Taxp,Dependent,Taxy)).
assumption(not_s7703(Taxp,Spouse,Marriage,Taxy)).
assumption(not_s2_a_2(Taxp,Spouse,Previous_marriage,Taxy)).
assumption(not_s2_a_2_B(Taxp,Spouse,Taxy)).
assumption(not_nonresident_alien_cant_file_jointly_2(Taxp,Spouse, Someone_is_nra, Start_nra, End_nra, Taxy, First_day_year, Last_day_year)).
assumption(not_s2_b_3(Taxp,Dependent,Taxy)).
assumption(not_s2_b_2_A(Taxp,Spouse,S98,Marriage,Taxy)).
assumption(not_s2_b_2_B(Taxp,Spouse,Taxy)).
assumption(not_spouse_dead(Spouse_dies,Spouse)).
assumption(not_individual_married(Marriage,Taxp,Spouse,Start_marriage,Taxy,Spouse_dies,Death_time,Last_day_year)).
assumption(not_s2_b_1_A_i_I_and_II(Dependent,Taxp,Taxy)).
assumption(not_s152_b(Dependent,Taxp,Taxy)).
assumption(not_s152_a_1(Dependent,Taxp,Taxy)).
assumption(not_valid_relationship_s152_d_2(Dependent,Taxp)).
assumption(not_s63_b(Taxp,Taxy,Taxinc,Grossinc)).
assumption(not_s63_d(Taxp,Itemded,Total_amount,Taxy)).
assumption(not_s63_c_6(Taxp,Taxy,Standed)).
assumption(not_s63_c_5(Taxp,S45,Grossinc,Taxy,Bassd)).
assumption(not_s63_c_2_B(Taxp,Taxy,Bassd)).
assumption(not_s63_c_2_A(Taxp,Taxy,Multiplier)).
assumption(not_s63_c_7_i(Taxy,Amount)).
assumption(not_s63_c_7_ii(Taxy,Amount)).
assumption(not_couple_joint_return(Joint_return,Taxp,Spouse,First_day_year,Last_day_year)).
assumption(not_s63_f_3(Taxp,Taxy,Amount)).
assumption(not_s63_f_1_A(Taxp,Taxy)).
assumption(not_s63_f_1_B(Taxp,Spouse,Taxy)).
assumption(not_s63_f_2_A(Taxp,Taxy)).
assumption(not_s63_f_2_B(Taxp,Spouse,Taxy)).
assumption(not_s68_f(Taxy)).
assumption(not_s68_a(Taxp,Agi,Aa,Itemded,S7,Taxy)).
assumption(not_joint_return_def(Taxp,Spouse,Taxy)).
assumption(not_s151_joint_return(Taxp,First_day_year,Last_day_year,Taxy)).
assumption(not_s151_b_joint_return(Taxp,Spouse,Taxy)).
assumption(not_s152(Dependent,Taxp,Taxy)).
assumption(not_s151_d_2(Taxp,Otaxp,Ea,Taxy)).
assumption(not_s151_d_5(Ea,Taxy)).
assumption(not_s151_d_3(Taxp,Exemption_in,Ea,Taxy)).
assumption(not_s151_d_3_B_separate_return(Taxp,Taxy)).
assumption(not_s151_d_3_B_joint_return(Taxp,Taxy,Spouse)).
assumption(not_s152_b_1(Taxp,Otaxp,Taxy)).
assumption(not_s152_b_2(Dependent,S21,Spouse,Taxy)).
assumption(not_individual_death(Individual,Death_time)).
assumption(not_s152_c_1_E_joint_return(Dependent,Spouse,Taxy)).
assumption(not_s152_c_3_dependent_born(Dependent)).
assumption(not_s152_c(Dependent,Taxp,Taxy)).
assumption(not_s152_d_2_H_end_marriage(Dependent,Taxp,Last_day_year,First_day_year)).
assumption(not_purpose_(Service, Label)).
assumption(not_type_(Service,Type)).
assumption(not_means_(Remuneration,Means)).
assumption(not_s3306_b_2(Remuneration,Service,Employer,Employee,Payee,Plan)).
assumption(not_plan_(Plan)).
assumption(not_s3306_a_3(Employer,Wages,Caly)).
assumption(not_s3306_b_7(Remuneration,Service,Employer,Employee,Medium,S92)).
assumption(not_medium_is_cash(Medium)).
assumption(not_s3306_b_10(Remuneration,Service,Employer,Employee,Payee,Plan)).
assumption(not_s3306_b_11(Remuneration,Service,Medium)).
assumption(not_s3306_b_15(Remuneration,Employer,Payee,Employee,Caly)).
assumption(not_s3306_c_1(Service,Caly)).
assumption(not_s3306_c_2(Service,Location,Caly)).
assumption(not_s3306_c_5(Service,Employer,Employee,Workday)).
assumption(not_s3306_c_6(Service)).
assumption(not_s3306_c_7(Service,Employer)).
assumption(not_s3306_c_10(Service,Employer,Employee,Workday)).
assumption(not_s3306_c_11(Service,Employer)).
assumption(not_s3306_c_13(Service,Employer,Employee,Workday)).
assumption(not_s3306_c_16(Service,Employer)).
assumption(not_s3306_c_21(Service,Employee,S235,Workday)).
assumption(not_s3306_c_1_B_not(Service,Employee)).
assumption(not_location_(Service,Location)).
assumption(not_country_(Geographical_location,Country)).
assumption(not_s3306_c_B_agreement(Location)).
assumption(not_s3306_c_1_A_and_B(Service,Caly)).
assumption(not_country_equals_usa(Location)).
assumption(not_location_equals_usa(Location)).
assumption(not_employer_is_usa_government(Service,Employer)).
assumption(not_s7703_b(Taxp,Spouse,Taxy)).
assumption(not_s7703_a_2(Taxp,Spouse,Marriage,S19,Taxy)).
assumption(not_s7703_b_1_joint_return(Taxp,First_day_year,Last_day_year)).
assumption(not_s7703_a_1_death_spouse(Spouse,S13,First_day_year,Last_day_year)).
assumption(not_s7703_a_1_death_2(Spouse,Spouse_dies)).

contrary(not_start_(Event,Time),start_(Event,Time)) :- 
    assumption(not_start_(Event,Time)).
contrary(not_end_(Event,Time),end_(Event,Time)) :- 
    assumption(not_end_(Event,Time)).
contrary(not_nonresident_alien_cant_file_jointly(Taxp,Spouse,First_day,Last_day), 
        nonresident_alien_cant_file_jointly(Taxp,Spouse,First_day,Last_day)) :- 
            assumption(not_nonresident_alien_cant_file_jointly(Taxp,Spouse,First_day,Last_day)).
contrary(not_single_return_joint_with_spouse(Joint_return, Taxp, Spouse, Taxy, First_day, Last_day),
        single_return_joint_with_spouse(Joint_return, Taxp, Spouse, Taxy, First_day, Last_day)) :-
            assumption(not_single_return_joint_with_spouse(Joint_return, Taxp, Spouse, Taxy, First_day, Last_day)).
contrary(not_s2_a(Taxp,Spouse,Taxy),s2_a(Taxp,Spouse,Taxy)):-
    assumption(not_s2_a(Taxp,Spouse,Taxy)).
contrary(not_s2_b(Taxp,Dependent,Taxy),s2_b(Taxp,Dependent,Taxy)):-
    assumption(not_s2_b(Taxp,Dependent,Taxy)).
contrary(not_s7703(Taxp,Spouse,Marriage,Taxy),s7703(Taxp,Spouse,Marriage,Taxy)):-
    assumption(not_s7703(Taxp,Spouse,Marriage,Taxy)).
contrary(not_s2_a_2(Taxp,Spouse,Previous_marriage,Taxy),s2_a_2(Taxp,Spouse,Previous_marriage,Taxy)):-
    assumption(not_s2_a_2(Taxp,Spouse,Previous_marriage,Taxy)).
contrary(not_s2_a_2_B(Taxp,Spouse,Taxy),s2_a_2_B(Taxp,Spouse,Taxy)):-
    assumption(not_s2_a_2_B(Taxp,Spouse,Taxy)).
contrary(not_nonresident_alien_cant_file_jointly_2(Taxp,Spouse, Someone_is_nra, Start_nra, End_nra, Taxy, First_day_year, Last_day_year), 
        nonresident_alien_cant_file_jointly_2(Taxp,Spouse, Someone_is_nra, Start_nra, End_nra, Taxy, First_day_year, Last_day_year)) :- 
            assumption(not_nonresident_alien_cant_file_jointly_2(Taxp,Spouse, Someone_is_nra, Start_nra, End_nra, Taxy, First_day_year, Last_day_year)).
contrary(not_s2_b_3(Taxp,Dependent,Taxy),s2_b_3(Taxp,Dependent,Taxy)):-
    assumption(not_s2_b_3(Taxp,Dependent,Taxy)).
contrary(not_s2_b_2_A(Taxp,Spouse,S98,Marriage,Taxy),s2_b_2_A(Taxp,Spouse,S98,Marriage,Taxy)):-
    assumption(not_s2_b_2_A(Taxp,Spouse,S98,Marriage,Taxy)).
contrary(not_s2_b_2_B(Taxp,Spouse,Taxy),s2_b_2_B(Taxp,Spouse,Taxy)):-
    assumption(not_s2_b_2_B(Taxp,Spouse,Taxy)).
contrary(not_spouse_dead(Spouse_dies,Spouse),spouse_dead(Spouse_dies,Spouse)):-
    assumption(not_spouse_dead(Spouse_dies,Spouse)).
contrary(not_individual_married(Marriage,Taxp,Spouse,Start_marriage,Taxy,Spouse_dies,Death_time,Last_day_year),
        individual_married(Marriage,Taxp,Spouse,Start_marriage,Taxy,Spouse_dies,Death_time,Last_day_year)):-
            assumption(not_individual_married(Marriage,Taxp,Spouse,Start_marriage,Taxy,Spouse_dies,Death_time,Last_day_year)).
contrary(not_s2_b_1_A_i_I_and_II(Dependent,Taxp,Taxy),s2_b_1_A_i_I_and_II(Dependent,Taxp,Taxy)):-
    assumption(not_s2_b_1_A_i_I_and_II(Dependent,Taxp,Taxy)).
contrary(not_s152_b(Dependent,Taxp,Taxy),s152_b(Dependent,Taxp,Taxy)):-
    assumption(not_s152_b(Dependent,Taxp,Taxy)).
contrary(not_s152_a_1(Dependent,Taxp,Taxy),s152_a_1(Dependent,Taxp,Taxy)):-
    assumption(not_s152_a_1(Dependent,Taxp,Taxy)).
contrary(not_valid_relationship_s152_d_2(Dependent,Taxp),valid_relationship_s152_d_2(Dependent,Taxp)):-
    assumption(not_valid_relationship_s152_d_2(Dependent,Taxp)).
contrary(not_s63_b(Taxp,Taxy,Taxinc,Grossinc),s63_b(Taxp,Taxy,Taxinc,Grossinc)) :-
    assumption(not_s63_b(Taxp,Taxy,Taxinc,Grossinc)).
contrary(not_s63_d(Taxp,Itemded,Total_amount,Taxy),s63_d(Taxp,Itemded,Total_amount,Taxy)) :-
    assumption(not_s63_d(Taxp,Itemded,Total_amount,Taxy)).
contrary(not_s63_c_6(Taxp,Taxy,Standed),s63_c_6(Taxp,Taxy,Standed)) :-
    assumption(not_s63_c_6(Taxp,Taxy,Standed)).
contrary(not_s63_c_5(Taxp,S45,Grossinc,Taxy,Bassd),s63_c_5(Taxp,S45,Grossinc,Taxy,Bassd)) :-
    assumption(not_s63_c_5(Taxp,S45,Grossinc,Taxy,Bassd)).
contrary(not_s63_c_2_B(Taxp,Taxy,Bassd),s63_c_2_B(Taxp,Taxy,Bassd)) :-
    assumption(not_s63_c_2_B(Taxp,Taxy,Bassd)).
contrary(not_s63_c_2_A(Taxp,Taxy,Multiplier),s63_c_2_A(Taxp,Taxy,Multiplier)) :-
    assumption(not_s63_c_2_A(Taxp,Taxy,Multiplier)).
contrary(not_s63_c_7_i(Taxy,Amount),s63_c_7_i(Taxy,Amount)) :-
    assumption(not_s63_c_7_i(Taxy,Amount)).
contrary(not_s63_c_7_ii(Taxy,Amount),s63_c_7_ii(Taxy,Amount)) :-
    assumption(not_s63_c_7_ii(Taxy,Amount)).
contrary(not_couple_joint_return(Joint_return,Taxp,Spouse,First_day_year,Last_day_year),
        couple_joint_return(Joint_return,Taxp,Spouse,First_day_year,Last_day_year)) :-
            assumption(not_couple_joint_return(Joint_return,Taxp,Spouse,First_day_year,Last_day_year)).
contrary(not_s63_f_3(Taxp,Taxy,Amount),s63_f_3(Taxp,Taxy,Amount)) :-
    assumption(not_s63_f_3(Taxp,Taxy,Amount)).
contrary(not_s63_f_1_A(Taxp,Taxy),s63_f_1_A(Taxp,Taxy)) :-
    assumption(not_s63_f_1_A(Taxp,Taxy)).
contrary(not_s63_f_1_B(Taxp,Spouse,Taxy),s63_f_1_B(Taxp,Spouse,Taxy)) :-
    assumption(not_s63_f_1_B(Taxp,Spouse,Taxy)).
contrary(not_s63_f_2_A(Taxp,Taxy),s63_f_2_A(Taxp,Taxy)) :-
    assumption(not_s63_f_2_A(Taxp,Taxy)).
contrary(not_s63_f_2_B(Taxp,Spouse,Taxy),s63_f_2_B(Taxp,Spouse,Taxy)) :-
    assumption(not_s63_f_2_B(Taxp,Spouse,Taxy)).
contrary(not_s68_f(Taxy),s68_f(Taxy)) :-
    assumption(not_s68_f(Taxy)).
contrary(not_s68_a(Taxp,Agi,Aa,Itemded,S7,Taxy),s68_a(Taxp,Agi,Aa,Itemded,S7,Taxy)) :-
    assumption(not_s68_a(Taxp,Agi,Aa,Itemded,S7,Taxy)).
contrary(not_joint_return_def(Taxp,Spouse,Taxy),joint_return_def(Taxp,Spouse,Taxy)) :-
    assumption(not_joint_return_def(Taxp,Spouse,Taxy)).
contrary(not_s151_joint_return(Taxp,First_day_year,Last_day_year,Taxy),s151_joint_return(Taxp,First_day_year,Last_day_year,Taxy)) :-
    assumption(not_s151_joint_return(Taxp,First_day_year,Last_day_year,Taxy)).
contrary(not_s151_b_joint_return(Taxp,Spouse,Taxy),s151_b_joint_return(Taxp,Spouse,Taxy)) :-
    assumption(not_s151_b_joint_return(Taxp,Spouse,Taxy)).
contrary(not_s152(Dependent,Taxp,Taxy),s152(Dependent,Taxp,Taxy)) :-
    assumption(not_s152(Dependent,Taxp,Taxy)).
contrary(not_s151_d_2(Taxp,Otaxp,Ea,Taxy),s151_d_2(Taxp,Otaxp,Ea,Taxy)) :-
    assumption(not_s151_d_2(Taxp,Otaxp,Ea,Taxy)).
contrary(not_s151_d_5(Ea,Taxy),s151_d_5(Ea,Taxy)) :-
    assumption(not_s151_d_5(Ea,Taxy)).
contrary(not_s151_d_3(Taxp,Exemption_in,Ea,Taxy),s151_d_3(Taxp,Exemption_in,Ea,Taxy)) :-
    assumption(not_s151_d_3(Taxp,Exemption_in,Ea,Taxy)).
contrary(not_s151_d_3_B_separate_return(Taxp,Taxy),s151_d_3_B_separate_return(Taxp,Taxy)) :-
    assumption(not_s151_d_3_B_separate_return(Taxp,Taxy)).
contrary(not_s151_d_3_B_joint_return(Taxp,Taxy,Spouse),s151_d_3_B_joint_return(Taxp,Taxy,Spouse)) :-
    assumption(not_s151_d_3_B_joint_return(Taxp,Taxy,Spouse)).
contrary(not_purpose_(Service, Label),purpose_(Service, Label)) :-
    assumption(not_purpose_(Service, Label)).
contrary(not_type_(Service,Type),type_(Service,Type)) :-
    assumption(not_type_(Service,Type)).
contrary(not_means_(Remuneration,Means),means_(Remuneration,Means)) :-
    assumption(not_means_(Remuneration,Means)).
contrary(not_s3306_b_2(Remuneration,Service,Employer,Employee,Payee,Plan),s3306_b_2(Remuneration,Service,Employer,Employee,Payee,Plan)) :-
    assumption(not_s3306_b_2(Remuneration,Service,Employer,Employee,Payee,Plan)).
contrary(not_plan_(Plan),plan_(Plan)) :-
    assumption(not_plan_(Plan)).
contrary(not_s3306_a_3(Employer,Wages,Caly),s3306_a_3(Employer,Wages,Caly)) :-
    assumption(not_s3306_a_3(Employer,Wages,Caly)).
contrary(not_s3306_b_7(Remuneration,Service,Employer,Employee,Medium,S92),s3306_b_7(Remuneration,Service,Employer,Employee,Medium,S92)) :-
    assumption(not_s3306_b_7(Remuneration,Service,Employer,Employee,Medium,S92)).
contrary(not_medium_is_cash(Medium),medium_is_cash(Medium)) :-
    assumption(not_medium_is_cash(Medium)).
contrary(not_s3306_b_10(Remuneration,Service,Employer,Employee,Payee,Plan),s3306_b_10(Remuneration,Service,Employer,Employee,Payee,Plan)) :-
    assumption(not_s3306_b_10(Remuneration,Service,Employer,Employee,Payee,Plan)).
contrary(not_s3306_b_11(Remuneration,Service,Medium),s3306_b_11(Remuneration,Service,Medium)) :-
    assumption(not_s3306_b_11(Remuneration,Service,Medium)).
contrary(not_s3306_b_15(Remuneration,Employer,Payee,Employee,Caly),s3306_b_15(Remuneration,Employer,Payee,Employee,Caly)) :-
    assumption(not_s3306_b_15(Remuneration,Employer,Payee,Employee,Caly)).
contrary(not_s3306_c_1(Service,Caly),s3306_c_1(Service,Caly)) :-
    assumption(not_s3306_c_1(Service,Caly)).
contrary(not_s3306_c_2(Service,Location,Caly),s3306_c_2(Service,Location,Caly)) :-
    assumption(not_s3306_c_2(Service,Location,Caly)).
contrary(not_s3306_c_5(Service,Employer,Employee,Workday),s3306_c_5(Service,Employer,Employee,Workday)) :-
    assumption(not_s3306_c_5(Service,Employer,Employee,Workday)).
contrary(not_s3306_c_6(Service),s3306_c_6(Service)) :-
    assumption(not_s3306_c_6(Service)).
contrary(not_s3306_c_7(Service,Employer),s3306_c_7(Service,Employer)) :-
    assumption(not_s3306_c_7(Service,Employer)).
contrary(not_s3306_c_10(Service,Employer,Employee,Workday),s3306_c_10(Service,Employer,Employee,Workday)) :-
    assumption(not_s3306_c_10(Service,Employer,Employee,Workday)).
contrary(not_s3306_c_11(Service,Employer),s3306_c_11(Service,Employer)) :-
    assumption(not_s3306_c_11(Service,Employer)).
contrary(not_s3306_c_13(Service,Employer,Employee,Workday),s3306_c_13(Service,Employer,Employee,Workday)) :-
    assumption(not_s3306_c_13(Service,Employer,Employee,Workday)).
contrary(not_s3306_c_16(Service,Employer),s3306_c_16(Service,Employer)) :-
    assumption(not_s3306_c_16(Service,Employer)).
contrary(not_s3306_c_21(Service,Employee,S235,Workday),s3306_c_21(Service,Employee,S235,Workday)) :-
    assumption(not_s3306_c_21(Service,Employee,S235,Workday)).
contrary(not_s3306_c_1_B_not(Service,Employee),s3306_c_1_B_not(Service,Employee)) :-
    assumption(not_s3306_c_1_B_not(Service,Employee)).
contrary(not_location_(Service,Location),location_(Service,Location)) :-
    assumption(not_location_(Service,Location)).
contrary(not_country_(Geographical_location,Country),country_(Geographical_location,Country)) :-
    assumption(not_country_(Geographical_location,Country)).
contrary(not_s3306_c_B_agreement(Location),s3306_c_B_agreement(Location)) :-
    assumption(not_s3306_c_B_agreement(Location)).
contrary(not_s3306_c_1_A_and_B(Service,Caly),s3306_c_1_A_and_B(Service,Caly)) :-
    assumption(not_s3306_c_1_A_and_B(Service,Caly)).
contrary(not_country_equals_usa(Location),country_equals_usa(Location)) :-
    assumption(not_country_equals_usa(Location)).
contrary(not_location_equals_usa(Location),location_equals_usa(Location)) :-
    assumption(not_location_equals_usa(Location)).
contrary(not_employer_is_usa_government(Service,Employer),employer_is_usa_government(Service,Employer)) :-
    assumption(not_employer_is_usa_government(Service,Employer)).
contrary(not_s7703_b(Taxp,Spouse,Taxy),s7703_b(Taxp,Spouse,Taxy)) :-
    assumption(not_s7703_b(Taxp,Spouse,Taxy)).
contrary(not_s7703_a_2(Taxp,Spouse,Marriage,S19,Taxy),s7703_a_2(Taxp,Spouse,Marriage,S19,Taxy)) :-
    assumption(not_s7703_a_2(Taxp,Spouse,Marriage,S19,Taxy)).
contrary(not_s7703_b_1_joint_return(Taxp,First_day_year,Last_day_year),s7703_b_1_joint_return(Taxp,First_day_year,Last_day_year)) :-
    assumption(not_s7703_b_1_joint_return(Taxp,First_day_year,Last_day_year)).
contrary(not_s7703_a_1_death_spouse(Spouse,S13,First_day_year,Last_day_year),s7703_a_1_death_spouse(Spouse,S13,First_day_year,Last_day_year)) :-
    assumption(not_s7703_a_1_death_spouse(Spouse,S13,First_day_year,Last_day_year)).
contrary(not_s7703_a_1_death_2(Spouse,Spouse_dies),s7703_a_1_death_2(Spouse,Spouse_dies)) :-
    assumption(not_s7703_a_1_death_2(Spouse,Spouse_dies)).
